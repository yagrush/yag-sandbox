version: '3'
services:
    kvs:
        container_name: yag-kvs
        image: yag-kvs
        restart: always
        # platform: linux/x86_64
        platform: linux/arm64 # M1 Mac
        build:
            context: .
            dockerfile: ./kvs/Dockerfile
        ports:
            - 6379:6379
        volumes:
            - ./kvs/data:/data
            - ./kvs/log:/var/log/redis
            - ./kvs/redis.conf:/usr/local/etc/redis/redis.conf
        command: redis-server /usr/local/etc/redis/redis.conf
        user: 1000:1000

    db:
        container_name: yag-db
        image: yag-db
        restart: always
        # platform: linux/x86_64
        platform: linux/arm64 # M1 Mac
        build:
            context: .
            dockerfile: ./db/Dockerfile
        ports:
            - 3306:3306
        volumes:
            - ./db/conf/:/etc/mysql/conf.d
            - sample-db-local:/var/lib/mysql
            - ./db/log/:/tmp/log
        user: 1000:1000
        environment:
            MYSQL_ROOT_PASSWORD: pass
            MYSQL_DATABASE: sample
            MYSQL_USER: sample
            MYSQL_PASSWORD: sample
            # TZ: ${TZ} # world wideなサービスならUTC+0にしたい

    phpfpm:
      # platform: linux/x86_64
      platform: linux/arm64 # M1 Mac
      build:
        context: ./php
        dockerfile: Dockerfile
      container_name: yag-phpfpm
      # environment:
      #   AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID:-}"
      #   AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY:-}"
      depends_on:
      - kvs
      - db
      volumes:
      - ./application:/var/www/html
      - phpsocket:/var/php-fpm
    #   tty: true

    nginx:
      restart: always
      image: nginx:1
    #   platform: linux/x86_64
      platform: linux/arm64 # M1 Mac
      container_name: yag-nginx
      depends_on:
      - kvs
      - db
      - phpfpm
      ports:
      - 8080:80
      volumes:
      - ./application:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - phpsocket:/var/php-fpm
      - ./nginx/log:/var/log/nginx

volumes:
  phpsocket:
    
  # 名前付きボリュームを消すと docker-entrypoint-initdb.d がまた走る
  sample-db-local: